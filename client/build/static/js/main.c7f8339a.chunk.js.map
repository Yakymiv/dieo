{"version":3,"sources":["actions/addOrderList.js","reduxConstList.js","components/header.jsx","actions/addMachinesList.js","components/user/modalForms/firstSelect.jsx","actions/addToolList.js","components/user/modalForms/orderButton.jsx","components/user/modalForms/useInfoStatusText.jsx","components/user/modalForms/orderForm.jsx","actions/addMechanicList.js","components/user/modalForms/personalForm.jsx","components/user/modalForms/modalForm.jsx","components/user/subAddOrder.jsx","components/user/orderList.jsx","components/footer.jsx","components/user/main.jsx","App.js","reducers/ordersList.js","reducers/machinesList.js","reducers/mechanicList.js","reducers/toolList.js","reducers/combReducers.js","index.js"],"names":["addOrdersList","ordersList","type","DieHeader","addMachinesList","machinesList","connect","choiseForm","dispatch","useEffect","fetch","then","response","json","data","catch","err","console","error","message","handleClick","e","val","target","value","Fragment","Row","className","Button","onClick","variant","size","addToolList","toolList","OrderButton","myClick","Col","sm","block","useInfoStatusText","statusText","orderItem","a","style","color","machine","app","material","mechanic","state","tools","machines","useState","selectTool","setSelectTool","selectMachine","setSelectMachine","selectDpn","setSelectDpn","setStatusText","open","setOpen","setOrderItem","infoStatusText","handleChange","set","id","setInfoStatus","status","Form","Group","controlId","Label","Control","as","onChange","multiple","map","element","key","toolnumber","dpnForm","disabled","dpnForTool","filter","dpn","undefined","dataRow","method","body","JSON","stringify","headers","Collapse","in","addMechanicList","mechanicList","selectPers","setSelectPers","ModalForm","idForm","setIdForm","ModalOrderTools","props","Modal","arial-labeledby","centered","Header","closeButton","Title","Body","Footer","onHide","SubAddOrder","modalShow","setModalShow","setButton","active","show","Th","children","textAlign","Td","TdList","ordertime","orderstatus","store","selectPage","addOrderList","Table","responsive","length","DieFooter","App","defaultOrdersList","action","machinesListDefault","mechanicListDefault","defaultToolList","combineReducers","createStore","orders","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7f8339a.chunk.js","sourcesContent":["import { ADD_ORDERS_LIST } from './../reduxConstList';\r\n\r\nconst addOrdersList = ordersList => {\r\n    return {\r\n        type: ADD_ORDERS_LIST,\r\n        ordersList\r\n    };\r\n};\r\n\r\nexport default addOrdersList;","export const ADD_ORDERS_LIST = 'ADD_ORDERS_LIST';\r\nexport const ADD_MACHINES_LIST = 'ADD_MACHINES_LIST';\r\nexport const ADD_MECHANIC_LIST = 'ADD_MECHANIC_LIST';\r\nexport const ADD_TOOL_LIST = 'ADD_TOOL_LIST';","import React from 'react';\r\n\r\nconst DieHeader = () => (\r\n    <header>\r\n        <h1>Orders of tools</h1>\r\n    </header>\r\n);\r\n\r\nexport default DieHeader","import { ADD_MACHINES_LIST } from './../reduxConstList';\r\n\r\nconst addMachinesList = machinesList => {\r\n    return {\r\n        type: ADD_MACHINES_LIST,\r\n        machinesList\r\n    }\r\n}\r\n\r\nexport default addMachinesList;","import React, { useEffect }  from 'react';\r\nimport { Button, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addMachinesList from './../../../actions/addMachinesList';\r\n\r\nconst FirstSelect = ({ choiseForm, dispatch }) => {\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die/machines').then(response => response.json())\r\n        .then(data => dispatch(addMachinesList(data))).catch(err => console.error(`Помилка зчитування списку машин із сервера ( ${err.message} ).`));\r\n    });\r\n    \r\n    const handleClick = (e) => {\r\n        const val = (e.target.value);\r\n        choiseForm(val);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Row className=\"mb-2 mt-4 justify-content-md-center\">\r\n                <h4>Виберіть що вам потрібно</h4>\r\n            </Row>\r\n            <Row className=\"mb-4 justify-content-md-center\">\r\n                <Button value=\"order\" onClick={handleClick} className=\"mr-3\" variant=\"info\" size=\"lg\">\r\n                    Замовити інструмент\r\n                </Button>{' '}\r\n                <Button value=\"personal\" onClick={handleClick} className=\"ml-3\" variant=\"success\" size=\"lg\">\r\n                    Потрібен наладчик\r\n                </Button>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default connect()(FirstSelect);","import { ADD_TOOL_LIST } from './../reduxConstList';\r\n\r\nconst addToolList = toolList => {\r\n    return {\r\n        type: ADD_TOOL_LIST,\r\n        toolList\r\n    }\r\n}\r\n\r\nexport default addToolList;","import React from 'react';\r\nimport { Row, Button, Col } from 'react-bootstrap';\r\n\r\nconst OrderButton = ({ myClick }) => <Row className=\"mb-4 justify-content-md-center\"><Col sm={4}><Button variant=\"info\" size=\"lg\" block onClick={myClick}>Зробити заказ</Button></Col></Row>;\r\n\r\nexport default OrderButton;","import React from 'react';\r\n\r\nconst useInfoStatusText = (statusText, orderItem, a) => {\r\n    if (!statusText) return <p></p>;\r\n        if (statusText === true) {\r\n            if (a === 'tool') {\r\n                return (\r\n                    <h6 style={{color: \"green\"}}>Заказ зроблено: {`Машина: ${orderItem.machine}, Інструмент: ${orderItem.app}, Матеріал: ${orderItem.material}`}</h6>\r\n                );\r\n            } else if (a === 'pers') {\r\n                return (\r\n                    <h6 style={{color: \"green\"}}>Заказ зроблено: {`Машина: ${orderItem.machine}, Виклик наладчика${orderItem.mechanic === 'DIE' ? ' - Die-центру' :\r\n                        orderItem.mechanic === 'Mechan' ? ' по машинах/верстатах' : false}`}</h6>\r\n                    );\r\n            } else console.error(err => `Невірний третій аргумент в хуці \"useInfoStatusText\" ( ${err.message} ).`);\r\n        } else if (statusText === \"empty\") {\r\n            return (\r\n                <h6 style={{color: \"#ff4000\"}}>Будь-ласка заповніть усі поля.</h6>\r\n            );\r\n        } else if (statusText === 'already') {\r\n            return (\r\n                <h6 style={{color: \"#ff4000\"}}>Такий заказ був щойно зроблений.</h6>\r\n            );\r\n        } else {\r\n            console.error('Невідома помилку, зберігайте спокій!;)')\r\n        }\r\n}\r\n\r\nexport default useInfoStatusText;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Form, Col, Collapse } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addToolList from './../../../actions/addToolList';\r\nimport OrderButton from './orderButton';\r\nimport useInfoStatusText from './useInfoStatusText';\r\n\r\nconst OrderForm = ( { dispatch, machines, tools }) => {\r\n\r\n    const [selectTool, setSelectTool] = useState(null);\r\n    const [selectMachine, setSelectMachine] = useState(null);\r\n    const [selectDpn, setSelectDpn] = useState(null);\r\n    const [statusText, setStatusText] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [orderItem, setOrderItem] = useState(false);\r\n\r\n    const infoStatusText = useInfoStatusText(statusText, orderItem, 'tool')\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die/tools').then(response => response.json()).then(data => {\r\n            dispatch(addToolList(data));\r\n        }).catch(err => console.error(`Помилка зчитування списку доступних інструментів із серверу ( ${err.message} ).`));\r\n    },[dispatch]);\r\n\r\n    const handleChange = (e, set) => {\r\n        const value = e.target.value;\r\n        set(value);\r\n        if (e.target.id === 'tool') {\r\n            setSelectDpn('null');\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (selectTool === null || selectMachine === null || selectDpn === null || selectDpn === 'null') {\r\n            setInfoStatus('empty');\r\n            return;\r\n        }\r\n        fetch('http://localhost:5000/die?page=1').then(response => response.json()).then(data => {\r\n            if (data[0] === undefined) {\r\n                data = [{machine: 0, app: 0, material: 0}]\r\n            }\r\n            const dataRow = data[0]\r\n            if (dataRow.machine !== selectMachine ? true : dataRow.app !== selectTool ? true : dataRow.material !== selectDpn ? true : false){\r\n                fetch('http://localhost:5000/die', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                        machine: selectMachine,\r\n                        app: selectTool,\r\n                        material: selectDpn,\r\n                        mechanic: null}),\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                }).then(response => response.json()).then(data => setInfoStatus(true, data)).catch(err => console.error(`Помилка відправки данних на сервер ( ${err.message} ).`));\r\n        } else setInfoStatus('already');\r\n    }).catch(err => console.error(`Помилка зчитування останнього заказу зі сервера ( ${err.message} ).`));\r\n    }\r\n\r\n    const dpnForTool = () => {\r\n        const dpnForm = <Form.Control as=\"select\" multiple disabled></Form.Control>\r\n        if (typeof selectTool === 'string' ? true : typeof selectTool === 'number' ? true : false) {\r\n            const dpnlist = tools.filter(element => element.toolnumber === selectTool);\r\n            const dpnForTool = dpnlist[0].dpn.map(element => <option key={element}>{element}</option>);\r\n            return <Form.Control as=\"select\" multiple onChange={e => handleChange(e, setSelectDpn)}>{dpnForTool}</Form.Control>;\r\n        } else {\r\n            return dpnForm;\r\n        }\r\n    }\r\n\r\n    const setInfoStatus = (status, data) => {\r\n        setStatusText(status);\r\n        if (data) setOrderItem(data[0]);\r\n        setOpen(true)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Row className=\"mb-2 mt-2 justify-content-md-center\">\r\n                <h4>Заказ інструменту</h4>\r\n            </Row>\r\n            <Form>\r\n                <Row className=\"mb-2 justify-content-md-center\">\r\n                    <Col sm={2}>\r\n                        <Form.Group controlId=\"machine\">\r\n                            <Form.Label>Машина</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={e => handleChange(e, setSelectMachine)} multiple>\r\n                                {machines.map(element => <option key={element.id}>{element.machine}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={5}>\r\n                        <Form.Group controlId=\"tool\">\r\n                            <Form.Label>Апплікатор</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={e => handleChange(e, setSelectTool)} multiple>\r\n                                {tools.map(element => <option key={element.id}>{element.toolnumber}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={5}>\r\n                        <Form.Group controlId=\"material\">\r\n                            <Form.Label>Матеріал</Form.Label>\r\n                            {dpnForTool()}\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <OrderButton myClick={handleClick}/>\r\n                <Row className=\"mb-2\">\r\n                    <Col>\r\n                        <Collapse in={open}>\r\n                            {infoStatusText}\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tools: state.toolList,\r\n        machines: state.machinesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderForm);","import { ADD_MECHANIC_LIST } from './../reduxConstList';\r\n\r\nconst addMechanicList = mechanicList => {\r\n    return {\r\n        type: ADD_MECHANIC_LIST,\r\n        mechanicList\r\n    }\r\n}\r\n\r\nexport default addMechanicList;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Form, Col, Collapse } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addMechanicList from './../../../actions/addMechanicList';\r\nimport OrderButton from './orderButton';\r\nimport useInfoStatusText from './useInfoStatusText';\r\n\r\nconst PersonalForm = ({ dispatch, mechanic, machines }) => {\r\n\r\n    const [selectMachine, setSelectMachine] = useState(null);\r\n    const [selectPers, setSelectPers] = useState(\"DIE\");\r\n    const [open, setOpen] = useState(false);\r\n    const [statusText, setStatusText] = useState(false);\r\n    const [orderItem, setOrderItem] = useState(false);\r\n\r\n    const infoStatusText = useInfoStatusText(statusText, orderItem, 'pers')\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die/mechanic').then(response => response.json()).then(data => {\r\n            dispatch(addMechanicList(data));\r\n        }).catch(err => console.error(`Помилка зчитування доступних механіків із серверу ( ${err.message} ).`));\r\n    }, [dispatch])\r\n\r\n    const handleChange = (e, set) => {\r\n        const value = e.target.value;\r\n        set(value);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (selectMachine === null || selectPers === null) {\r\n            setInfoStatus('empty')\r\n            return;\r\n        }\r\n        fetch('http://localhost:5000/die?page=1').then(response => response.json()).then(data => {\r\n            if (data[0] === undefined) {\r\n                data = [{machine: 0, mechanic: 0}]\r\n            }\r\n            const dataRow = data[0];\r\n            if (dataRow.machine !== selectMachine || dataRow.mechanic !== selectPers) {\r\n                fetch('http://localhost:5000/die', {\r\n                    method: 'POST',\r\n                    headers: {'content-type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        machine: selectMachine,\r\n                        app: null,\r\n                        material: null,\r\n                        mechanic: selectPers\r\n                    })\r\n                }).then(response => response.json()).then(data => setInfoStatus(true, data)).catch(err => console.error(`Помилка відправки данних на сервер ( ${err.message} ).`));\r\n            } else setInfoStatus('already')\r\n        }).catch(err => console.error(`Помилка зчитування останнього заказу із сервера ( ${err.message} ).`));\r\n    }\r\n\r\n    const setInfoStatus = (status, data) => {\r\n        setStatusText(status);\r\n        if (data) setOrderItem(data[0]);\r\n        setOpen(true)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Row className=\"mb-2 mt-2 justify-content-md-center\">\r\n                <h4>Виклик наладчика</h4>\r\n            </Row>\r\n            <Form>\r\n                <Row className=\"mb-4 justify-content-md-center\" >\r\n                    <Col sm={2}>\r\n                        <Form.Group controlId=\"machine\">\r\n                            <Form.Label>Машина</Form.Label>\r\n                            <Form.Control as=\"select\" multiple onChange={e => handleChange(e, setSelectMachine)}>\r\n                                {machines.map(element => <option key={element.id}>{element.machine}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Form.Group controlId=\"tool\">\r\n                            <Form.Label>Хто потрібен</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={e => handleChange(e, setSelectPers)}>\r\n                                {mechanic.map(element => <option key={element.id} value={element.mechanic}>{element.mechanic === 'DIE' ? 'Die-центру' :\r\n                                    element.mechanic === 'Mechan' ? 'До машини/верстата' : false}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <OrderButton myClick={handleClick}/>\r\n                <Row className=\"mb-2\">\r\n                    <Col>\r\n                        <Collapse in={open}>\r\n                            {infoStatusText}\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mechanic: state.mechanicList,\r\n        machines: state.machinesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PersonalForm);","import React, { useState }  from 'react';\r\nimport FirstSelect from './firstSelect';\r\nimport OrderForm from './orderForm';\r\nimport PersonalForm from './personalForm';\r\n\r\nconst ModalForm = () => {\r\n    const [idForm, setIdForm] = useState('first');\r\n    const myChoise = () => {\r\n        if (idForm === 'first') {\r\n            return <FirstSelect  choiseForm={setIdForm}/>\r\n        } else if (idForm === 'order') {\r\n            return <OrderForm />\r\n        } else if (idForm === 'personal') {\r\n            return <PersonalForm />\r\n        } else {\r\n            return <FirstSelect  choiseForm={setIdForm}/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {myChoise()}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ModalForm;","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport ModalForm from './modalForms/modalForm';\r\n\r\nconst SubAddOrder = () => {\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    const setButton = modalShow ? (\r\n            <Button variant=\"outline-info\" size=\"lg\" onClick={() => setModalShow(true)} block active>\r\n                Зробити замовлення\r\n            </Button>\r\n         ) : (\r\n            <Button variant=\"outline-info\" size=\"lg\" onClick={() => setModalShow(true)} block>\r\n                Зробити замовлення\r\n            </Button>\r\n        )\r\n\r\n    return(\r\n        <section>\r\n            {setButton}\r\n            <ModalOrderTools show={modalShow} onHide={() => setModalShow(false)} />\r\n        </section>\r\n\r\n    );\r\n};\r\n\r\nconst ModalOrderTools = (props) => {\r\n    return(\r\n        <Modal {...props} size=\"lg\" arial-labeledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Форма заказу\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ModalForm />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Закрити</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\nexport default SubAddOrder;","import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addOrderList from './../../actions/addOrderList';\r\n\r\nconst OrderList = ({ ordersList, dispatch }) => {\r\n\r\n\r\n    const [selectPage, setSelectPage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/die?${selectPage ? selectPage : 'page=1'}`).then(response => response.json()).then(data => {\r\n            dispatch(addOrderList(data))\r\n        })\r\n    }, [dispatch, selectPage]);\r\n\r\n    return(\r\n        <section>\r\n            <Table responsive size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                    <Th>Машина</Th>\r\n                    <Th>Апплікатор</Th>\r\n                    <Th>Матеріал</Th>\r\n                    <Th>Механік</Th>\r\n                    <Th>Час заказу</Th>\r\n                    <Th>Статус</Th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {(ordersList.length !== 0) && ordersList.map(element => <TdList key={element.id}>{element}</TdList>) }\r\n                </tbody>\r\n            </Table>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst Th = ({ children }) => {\r\n    return(\r\n        <th style={{textAlign: 'center'}}>{ children }</th>\r\n    );\r\n}\r\n\r\nconst Td = ({ children }) => {\r\n    return(\r\n        <td style={{textAlign: 'center'}}>{ children }</td>\r\n    )\r\n}\r\n\r\nconst TdList = ({ children }) => {\r\n    return(\r\n        <tr>\r\n            <Td>{children.machine}</Td>\r\n            <Td>{children.app}</Td>\r\n            <Td>{children.material}</Td>\r\n            <Td>{children.mechanic === 'Mechan' ? 'До машини/верстата' : children.mechanic === 'DIE' ? 'Die - центру' : children.mechanic === null ? '' :\r\n                console.error(\r\n                    'Помилка на стадії відображеня, невірно зчитано/вказано найменування наладчика'\r\n                )}</Td>\r\n            <Td>{children.ordertime}</Td>\r\n            <Td>{children.orderstatus === false ? 'Очікує' : 'Виконано'}</Td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        ordersList: store.ordersList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderList);","import React from 'react';\r\n\r\nconst DieFooter = () => (\r\n    <footer>\r\n        <h2>This is futer!!!</h2>\r\n    </footer>\r\n);\r\n\r\nexport default DieFooter;","import React, { useEffect } from 'react';\r\nimport addOrdersList from './../../actions/addOrderList';\r\nimport { connect } from 'react-redux';\r\nimport DieHeader from './../header';\r\nimport SubAddOrder from './subAddOrder';\r\nimport OrderList from './orderList';\r\nimport DieFooter from './../footer';\r\n\r\n\r\nconst MainUser = ({ dispatch }) => {\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die').then(response => response.json())\r\n        .then(data => dispatch(addOrdersList(data)));\r\n    });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DieHeader />\r\n            <SubAddOrder />\r\n            <OrderList />\r\n            <DieFooter />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default connect()(MainUser);","import React from 'react';\nimport MainUser from './components/user/main'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <MainUser />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ADD_ORDERS_LIST } from './../reduxConstList';\r\n\r\nconst defaultOrdersList = [];\r\n\r\nconst ordersList = (state = defaultOrdersList, action) => {\r\n    switch(action.type) {\r\n        case ADD_ORDERS_LIST:\r\n            return action.ordersList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ordersList;","import { ADD_MACHINES_LIST } from './../reduxConstList';\r\n\r\nconst machinesListDefault = [];\r\n\r\nconst machinesList = (state = machinesListDefault, action) => {\r\n    switch(action.type) {\r\n        case ADD_MACHINES_LIST:\r\n            return action.machinesList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default machinesList;","import { ADD_MECHANIC_LIST } from './../reduxConstList';\r\n\r\nconst mechanicListDefault = [];\r\n\r\nconst mechanicList = (state = mechanicListDefault, action) => {\r\n    switch(action.type){\r\n        case ADD_MECHANIC_LIST:\r\n            return action.mechanicList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default mechanicList;","import { ADD_TOOL_LIST } from './../reduxConstList';\r\n\r\nconst defaultToolList = [];\r\n\r\nconst toolList = (state = defaultToolList, action) => {\r\n    switch(action.type){\r\n        case ADD_TOOL_LIST:\r\n            return action.toolList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toolList;","import { combineReducers } from 'redux';\r\nimport ordersList from './ordersList';\r\nimport machinesList from './machinesList';\r\nimport mechanicList from './mechanicList';\r\nimport toolList from './toolList';\r\n\r\nexport default combineReducers({\r\n    ordersList,\r\n    toolList,\r\n    machinesList,\r\n    mechanicList\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport orders from './reducers/combReducers';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(orders, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}