{"version":3,"sources":["components/header.jsx","actions/addMachinesList.js","reduxConstList.js","components/user/modalForms/firstSelect.jsx","actions/addToolList.js","components/user/modalForms/orderButton.jsx","components/user/modalForms/useInfoStatusText.jsx","components/user/modalForms/orderForm.jsx","actions/addMechanicList.js","components/user/modalForms/personalForm.jsx","components/user/modalForms/modalForm.jsx","components/user/subAddOrder.jsx","actions/addOrderList.js","components/global/paginat.jsx","components/global/ThTdList.jsx","components/global/orderList.jsx","components/footer.jsx","components/user/main.jsx","components/die/main.jsx","components/setting/changeMachineList.jsx","components/setting/settingForm.jsx","components/setting/main.jsx","components/checkPassword.jsx","App.js","reducers/ordersList.js","reducers/machinesList.js","reducers/mechanicList.js","reducers/toolList.js","reducers/combReducers.js","index.js"],"names":["StyleHeader","styled","header","StyleH1","h1","DieHeader","addMachinesList","machinesList","type","connect","choiseForm","dispatch","useEffect","fetch","then","response","json","data","catch","err","console","error","message","handleClick","e","val","target","value","Fragment","Row","className","Button","onClick","variant","size","addToolList","toolList","OrderButton","myClick","Col","sm","block","useInfoStatusText","statusText","orderItem","a","style","color","machine","app","material","mechanic","state","tools","machines","useState","selectTool","setSelectTool","selectMachine","setSelectMachine","selectDpn","setSelectDpn","setStatusText","open","setOpen","setOrderItem","infoStatusText","handleChange","set","id","setInfoStatus","status","Form","Group","controlId","Label","Control","as","onChange","multiple","map","element","key","toolnumber","dpnForm","disabled","dpnForTool","filter","dpn","undefined","rows","dataRow","log","method","body","JSON","stringify","headers","Collapse","in","addMechanicList","mechanicList","selectPers","setSelectPers","ModalForm","idForm","setIdForm","ButtonWrapper","div","ModalOrderTools","props","Modal","arial-labeledby","centered","Header","closeButton","Title","Body","Footer","onHide","SubAddOrder","modalShow","setModalShow","setButton","active","show","addOrdersList","ordersList","Paginat","changePage","currentNumber","lastPage","numb","newNumber","ex","Number","Pagination","Prev","Item","Ellipsis","Next","StyleDiv","StyleGreenSpan","span","StyledRedSpan","Th","children","Td","dieCenter","selectPage","targetId","setTargetId","dataset","addOrderList","date","Date","ordertime","seconds","getSeconds","String","length","minutes","getMinutes","hours","getHours","tDate","getDate","month","getMonth","years","getFullYear","changeData","orderstatus","data-id","store","setSelectPage","setLastPage","reloadStatus","setReloadStatus","maxPage","myInt","setInterval","clearInterval","Table","responsive","StyleFooter","footer","DieFooter","MainUser","MainDie","ChangeMachineList","custom","placeholder","SettingForm","MainSetting","CheckPassword","textButton","myPassword","myPage","password","setShow","inputData","setInputData","handleClose","Text","to","ContainerWrapper","OpenDefault","Container","App","exact","path","component","defaultOrdersList","action","machinesListDefault","mechanicListDefault","defaultToolList","combineReducers","createStore","orders","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aae6ce68.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleHeader = styled.header`\r\n  background-image: linear-gradient(90deg, #17a2b8, #64d8cb);\r\n  width: 100%;\r\n  height: 75px;\r\n`;\r\n\r\nconst StyleH1 = styled.h1`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 25px;\r\n    height: 100%;\r\n    color: #fff;\r\n    font-size: 36px;\r\n    letter-spacing: 2px;\r\n    cursor: default;\r\n`;\r\n\r\nconst DieHeader = () => (\r\n    <StyleHeader>\r\n        <StyleH1>Orders of tools</StyleH1>\r\n    </StyleHeader>\r\n);\r\n\r\nexport default DieHeader","import { ADD_MACHINES_LIST } from './../reduxConstList';\r\n\r\nconst addMachinesList = machinesList => {\r\n    return {\r\n        type: ADD_MACHINES_LIST,\r\n        machinesList\r\n    }\r\n}\r\n\r\nexport default addMachinesList;","export const ADD_ORDERS_LIST = 'ADD_ORDERS_LIST';\r\nexport const ADD_MACHINES_LIST = 'ADD_MACHINES_LIST';\r\nexport const ADD_MECHANIC_LIST = 'ADD_MECHANIC_LIST';\r\nexport const ADD_TOOL_LIST = 'ADD_TOOL_LIST';","import React, { useEffect }  from 'react';\r\nimport { Button, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addMachinesList from './../../../actions/addMachinesList';\r\n\r\nconst FirstSelect = ({ choiseForm, dispatch }) => {\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die/machines').then(response => response.json())\r\n        .then(data => dispatch(addMachinesList(data))).catch(err => console.error(`Помилка зчитування списку машин із сервера ( ${err.message} ).`));\r\n    });\r\n    \r\n    const handleClick = (e) => {\r\n        const val = (e.target.value);\r\n        choiseForm(val);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Row className=\"mb-2 mt-4 justify-content-md-center\">\r\n                <h4>Виберіть що вам потрібно</h4>\r\n            </Row>\r\n            <Row className=\"mb-4 justify-content-md-center\">\r\n                <Button value=\"order\" onClick={handleClick} className=\"mr-3\" variant=\"info\" size=\"lg\">\r\n                    Замовити інструмент\r\n                </Button>{' '}\r\n                <Button value=\"personal\" onClick={handleClick} className=\"ml-3\" variant=\"success\" size=\"lg\">\r\n                    Потрібен наладчик\r\n                </Button>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default connect()(FirstSelect);","import { ADD_TOOL_LIST } from './../reduxConstList';\r\n\r\nconst addToolList = toolList => {\r\n    return {\r\n        type: ADD_TOOL_LIST,\r\n        toolList\r\n    }\r\n}\r\n\r\nexport default addToolList;","import React from 'react';\r\nimport { Row, Button, Col } from 'react-bootstrap';\r\n\r\nconst OrderButton = ({ myClick }) => <Row className=\"mb-4 justify-content-md-center\"><Col sm={4}><Button variant=\"info\" size=\"lg\" block onClick={myClick}>Зробити заказ</Button></Col></Row>;\r\n\r\nexport default OrderButton;","import React from 'react';\r\n\r\nconst useInfoStatusText = (statusText, orderItem, a) => {\r\n    if (!statusText) return <p></p>;\r\n        if (statusText === true) {\r\n            if (a === 'tool') {\r\n                return (\r\n                    <h6 style={{color: \"green\"}}>Заказ зроблено: {`Машина: ${orderItem.machine}, Інструмент: ${orderItem.app}, Матеріал: ${orderItem.material}`}</h6>\r\n                );\r\n            } else if (a === 'pers') {\r\n                return (\r\n                    <h6 style={{color: \"green\"}}>Заказ зроблено: {`Машина: ${orderItem.machine}, Виклик наладчика${orderItem.mechanic === 'DIE' ? ' - Die-центру' :\r\n                        orderItem.mechanic === 'Mechan' ? ' по машинах/верстатах' : false}`}</h6>\r\n                    );\r\n            } else console.error(err => `Невірний третій аргумент в хуці \"useInfoStatusText\" ( ${err.message} ).`);\r\n        } else if (statusText === \"empty\") {\r\n            return (\r\n                <h6 style={{color: \"#ff4000\"}}>Будь-ласка заповніть усі поля.</h6>\r\n            );\r\n        } else if (statusText === 'already') {\r\n            return (\r\n                <h6 style={{color: \"#ff4000\"}}>Такий заказ був щойно зроблений.</h6>\r\n            );\r\n        } else {\r\n            console.error('Невідома помилку, зберігайте спокій!;)')\r\n        }\r\n}\r\n\r\nexport default useInfoStatusText;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Form, Col, Collapse } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addToolList from './../../../actions/addToolList';\r\nimport OrderButton from './orderButton';\r\nimport useInfoStatusText from './useInfoStatusText';\r\n\r\nconst OrderForm = ( { dispatch, machines, tools }) => {\r\n\r\n    const [selectTool, setSelectTool] = useState(null);\r\n    const [selectMachine, setSelectMachine] = useState(null);\r\n    const [selectDpn, setSelectDpn] = useState(null);\r\n    const [statusText, setStatusText] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [orderItem, setOrderItem] = useState(false);\r\n\r\n    const infoStatusText = useInfoStatusText(statusText, orderItem, 'tool')\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die/tools').then(response => response.json()).then(data => {\r\n            dispatch(addToolList(data));\r\n        }).catch(err => console.error(`Помилка зчитування списку доступних інструментів із серверу ( ${err.message} ).`));\r\n    },[dispatch]);\r\n\r\n    const handleChange = (e, set) => {\r\n        const value = e.target.value;\r\n        set(value);\r\n        if (e.target.id === 'tool') {\r\n            setSelectDpn('null');\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (selectTool === null || selectMachine === null || selectDpn === null || selectDpn === 'null') {\r\n            setInfoStatus('empty');\r\n            return;\r\n        }\r\n        fetch('http://localhost:5000/die?page=1').then(response => response.json()).then(data => {\r\n            if (data.rows[0] === undefined) {\r\n                data = [{machine: 0, app: 0, material: 0}]\r\n            }\r\n            const dataRow = data.rows[0]\r\n            console.log(dataRow)\r\n            if (dataRow.machine !== selectMachine ? true : dataRow.app !== selectTool ? true : dataRow.material !== selectDpn ? true : false){\r\n                fetch('http://localhost:5000/die', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                        machine: selectMachine,\r\n                        app: selectTool,\r\n                        material: selectDpn,\r\n                        mechanic: null}),\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                }).then(response => response.json()).then(data => setInfoStatus(true, data)).catch(err => console.error(`Помилка відправки данних на сервер ( ${err.message} ).`));\r\n        } else setInfoStatus('already');\r\n    }).catch(err => console.error(`Помилка зчитування останнього заказу зі сервера ( ${err.message} ).`));\r\n    }\r\n\r\n    const dpnForTool = () => {\r\n        const dpnForm = <Form.Control as=\"select\" multiple disabled></Form.Control>\r\n        if (typeof selectTool === 'string' ? true : typeof selectTool === 'number' ? true : false) {\r\n            const dpnlist = tools.filter(element => element.toolnumber === selectTool);\r\n            const dpnForTool = dpnlist[0].dpn.map(element => <option key={element}>{element}</option>);\r\n            return <Form.Control as=\"select\" multiple onChange={e => handleChange(e, setSelectDpn)}>{dpnForTool}</Form.Control>;\r\n        } else {\r\n            return dpnForm;\r\n        }\r\n    }\r\n\r\n    const setInfoStatus = (status, data) => {\r\n        setStatusText(status);\r\n        if (data) setOrderItem(data[0]);\r\n        setOpen(true)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Row className=\"mb-2 mt-2 justify-content-md-center\">\r\n                <h4>Заказ інструменту</h4>\r\n            </Row>\r\n            <Form>\r\n                <Row className=\"mb-2 justify-content-md-center\">\r\n                    <Col sm={2}>\r\n                        <Form.Group controlId=\"machine\">\r\n                            <Form.Label>Машина</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={e => handleChange(e, setSelectMachine)} multiple>\r\n                                {machines.map(element => <option key={element.id}>{element.machine}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={5}>\r\n                        <Form.Group controlId=\"tool\">\r\n                            <Form.Label>Апплікатор</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={e => handleChange(e, setSelectTool)} multiple>\r\n                                {tools.map(element => <option key={element.id}>{element.toolnumber}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={5}>\r\n                        <Form.Group controlId=\"material\">\r\n                            <Form.Label>Матеріал</Form.Label>\r\n                            {dpnForTool()}\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <OrderButton myClick={handleClick}/>\r\n                <Row className=\"mb-2\">\r\n                    <Col>\r\n                        <Collapse in={open}>\r\n                            {infoStatusText}\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tools: state.toolList,\r\n        machines: state.machinesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderForm);","import { ADD_MECHANIC_LIST } from './../reduxConstList';\r\n\r\nconst addMechanicList = mechanicList => {\r\n    return {\r\n        type: ADD_MECHANIC_LIST,\r\n        mechanicList\r\n    }\r\n}\r\n\r\nexport default addMechanicList;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Form, Col, Collapse } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addMechanicList from './../../../actions/addMechanicList';\r\nimport OrderButton from './orderButton';\r\nimport useInfoStatusText from './useInfoStatusText';\r\n\r\nconst PersonalForm = ({ dispatch, mechanic, machines }) => {\r\n\r\n    const [selectMachine, setSelectMachine] = useState(null);\r\n    const [selectPers, setSelectPers] = useState(\"DIE\");\r\n    const [open, setOpen] = useState(false);\r\n    const [statusText, setStatusText] = useState(false);\r\n    const [orderItem, setOrderItem] = useState(false);\r\n\r\n    const infoStatusText = useInfoStatusText(statusText, orderItem, 'pers')\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/die/mechanic').then(response => response.json()).then(data => {\r\n            dispatch(addMechanicList(data));\r\n        }).catch(err => console.error(`Помилка зчитування доступних механіків із серверу ( ${err.message} ).`));\r\n    }, [dispatch])\r\n\r\n    const handleChange = (e, set) => {\r\n        const value = e.target.value;\r\n        set(value);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (selectMachine === null || selectPers === null) {\r\n            setInfoStatus('empty')\r\n            return;\r\n        }\r\n        fetch('http://localhost:5000/die?page=1').then(response => response.json()).then(data => {\r\n            if (data.rows[0] === undefined) {\r\n                data = [{machine: 0, mechanic: 0}]\r\n            }\r\n            const dataRow = data.rows[0];\r\n            if (dataRow.machine !== selectMachine || dataRow.mechanic !== selectPers) {\r\n                fetch('http://localhost:5000/die', {\r\n                    method: 'POST',\r\n                    headers: {'content-type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        machine: selectMachine,\r\n                        app: null,\r\n                        material: null,\r\n                        mechanic: selectPers\r\n                    })\r\n                }).then(response => response.json()).then(data => setInfoStatus(true, data)).catch(err => console.error(`Помилка відправки данних на сервер ( ${err.message} ).`));\r\n            } else setInfoStatus('already')\r\n        }).catch(err => console.error(`Помилка зчитування останнього заказу із сервера ( ${err.message} ).`));\r\n    }\r\n\r\n    const setInfoStatus = (status, data) => {\r\n        setStatusText(status);\r\n        if (data) setOrderItem(data[0]);\r\n        setOpen(true)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Row className=\"mb-2 mt-2 justify-content-md-center\">\r\n                <h4>Виклик наладчика</h4>\r\n            </Row>\r\n            <Form>\r\n                <Row className=\"mb-4 justify-content-md-center\" >\r\n                    <Col sm={2}>\r\n                        <Form.Group controlId=\"machine\">\r\n                            <Form.Label>Машина</Form.Label>\r\n                            <Form.Control as=\"select\" multiple onChange={e => handleChange(e, setSelectMachine)}>\r\n                                {machines.map(element => <option key={element.id}>{element.machine}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Form.Group controlId=\"tool\">\r\n                            <Form.Label>Хто потрібен</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={e => handleChange(e, setSelectPers)}>\r\n                                {mechanic.map(element => <option key={element.id} value={element.mechanic}>{element.mechanic === 'DIE' ? 'Die-центру' :\r\n                                    element.mechanic === 'Mechan' ? 'До машини/верстата' : false}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <OrderButton myClick={handleClick}/>\r\n                <Row className=\"mb-2\">\r\n                    <Col>\r\n                        <Collapse in={open}>\r\n                            {infoStatusText}\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mechanic: state.mechanicList,\r\n        machines: state.machinesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PersonalForm);","import React, { useState }  from 'react';\r\nimport FirstSelect from './firstSelect';\r\nimport OrderForm from './orderForm';\r\nimport PersonalForm from './personalForm';\r\n\r\nconst ModalForm = () => {\r\n    const [idForm, setIdForm] = useState('first');\r\n    const myChoise = () => {\r\n        if (idForm === 'first') {\r\n            return <FirstSelect  choiseForm={setIdForm}/>\r\n        } else if (idForm === 'order') {\r\n            return <OrderForm />\r\n        } else if (idForm === 'personal') {\r\n            return <PersonalForm />\r\n        } else {\r\n            return <FirstSelect  choiseForm={setIdForm}/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {myChoise()}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ModalForm;","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport ModalForm from './modalForms/modalForm';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin: 15px 30px;\r\n    width: 40%;\r\n`;\r\n\r\nconst SubAddOrder = () => {\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    const setButton = modalShow ? (\r\n            <ButtonWrapper><Button variant=\"outline-info\" size=\"lg\" block onClick={() => setModalShow(true)} active>\r\n                Зробити замовлення\r\n            </Button></ButtonWrapper>\r\n         ) : (\r\n            <ButtonWrapper><Button variant=\"outline-info\" size=\"lg\" block onClick={() => setModalShow(true)}>\r\n                Зробити замовлення\r\n            </Button></ButtonWrapper>\r\n        )\r\n\r\n    return(\r\n        <section>\r\n            {setButton}\r\n            <ModalOrderTools show={modalShow} onHide={() => setModalShow(false)} />\r\n        </section>\r\n\r\n    );\r\n};\r\n\r\nconst ModalOrderTools = (props) => {\r\n    return(\r\n        <Modal {...props} size=\"lg\" arial-labeledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Форма заказу\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ModalForm />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Закрити</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\nexport default SubAddOrder;","import { ADD_ORDERS_LIST } from './../reduxConstList';\r\n\r\nconst addOrdersList = ordersList => {\r\n    return {\r\n        type: ADD_ORDERS_LIST,\r\n        ordersList\r\n    };\r\n};\r\n\r\nexport default addOrdersList;","import React from 'react';\r\nimport { Pagination, Row } from 'react-bootstrap';\r\n\r\nconst Paginat = ({ changePage, currentNumber, lastPage }) => {\r\n\r\n    const handleClick = (numb) => {\r\n        changePage(numb);\r\n    }\r\n\r\n    const newNumber = (ex) => {\r\n        const newNumber = currentNumber + ex;\r\n        return(Number(newNumber));\r\n    }\r\n\r\n    return(\r\n        <Row className=\"mb-2 mt-2 justify-content-md-center\">\r\n            <Pagination>\r\n                {currentNumber >= 4 ? <Pagination.Prev onClick={() => handleClick(Number(currentNumber - 1))}/> : false}\r\n                {currentNumber >= 4 ? <Pagination.Item onClick={() => handleClick(Number(1))}>{1}</Pagination.Item> : false}\r\n                {currentNumber >= 4 ? <Pagination.Ellipsis /> : false}\r\n\r\n                {currentNumber === 1 ? <Pagination.Item active>{1}</Pagination.Item> : \r\n                    currentNumber === 2 ? <Pagination.Item onClick={() => handleClick(newNumber(Number(-1)))}>{newNumber(Number(-1))}</Pagination.Item> : \r\n                    <Pagination.Item onClick={() => handleClick(newNumber(Number(-2)))}>{newNumber(Number(-2))}</Pagination.Item>\r\n                }\r\n                {currentNumber === 2 ? <Pagination.Item active>{2}</Pagination.Item> : \r\n                    currentNumber === 1 ? <Pagination.Item onClick={() => handleClick(newNumber(Number(+1)))}>{newNumber(Number(+1))}</Pagination.Item> : \r\n                    <Pagination.Item onClick={() => handleClick(newNumber(Number(-1)))}>{newNumber(Number(-1))}</Pagination.Item>\r\n                }\r\n                {currentNumber <= 2 ? <Pagination.Item onClick={() => handleClick(3)}>{3}</Pagination.Item> : \r\n                <Pagination.Item active>{currentNumber}</Pagination.Item>\r\n                }\r\n                {lastPage < 4 || currentNumber >= lastPage - 1 ? false : \r\n                currentNumber < 4 || lastPage < 5 ? <Pagination.Item onClick={() => handleClick(4)}>{4}</Pagination.Item> : \r\n                <Pagination.Item onClick={() => handleClick(newNumber(Number(+1)))}>{newNumber(Number(+1))}</Pagination.Item>\r\n                }\r\n                {lastPage < 5 || currentNumber >= lastPage - 2 ? false : \r\n                currentNumber < 4 || lastPage < 6 ? <Pagination.Item onClick={() => handleClick(5)}>{5}</Pagination.Item> : \r\n                <Pagination.Item onClick={() => handleClick(newNumber(Number(+2)))}>{newNumber(Number(+2))}</Pagination.Item>\r\n                }\r\n                {currentNumber === lastPage ? false : lastPage > 5 ? <Pagination.Ellipsis /> : false}\r\n                {currentNumber === lastPage ? false : lastPage > 5 ? <Pagination.Item onClick={() => handleClick(lastPage)}>{lastPage}</Pagination.Item> : false}\r\n                {currentNumber === lastPage ? false : lastPage > 5 ? <Pagination.Next onClick={() => handleClick(Number(currentNumber + 1))}/> : false}\r\n            </Pagination>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Paginat;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addOrderList from './../../actions/addOrderList';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 25px;\r\n    margin: 5px;\r\n    font-size: 14px;\r\n`;\r\n\r\nconst StyleGreenSpan = styled.span`\r\n    color: green;\r\n`;\r\n\r\nconst StyledRedSpan = styled.span`\r\n    color: red;\r\n`;\r\n\r\nexport const Th = ({ children }) => {\r\n    return(\r\n        <th><StyleDiv>{ children }</StyleDiv></th>\r\n    );\r\n}\r\n\r\nexport const Td = ({ children }) => {\r\n    return(\r\n        <td><StyleDiv>{ children }</StyleDiv></td>\r\n    )\r\n}\r\n\r\nconst TdList = ({ children, dieCenter, selectPage, dispatch }) => {\r\n    const [targetId, setTargetId] = useState(false);\r\n\r\n    const handleClick = (e) => {\r\n        const id = e.target.dataset.id;\r\n        setTargetId(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (targetId === false) return;\r\n        fetch(`http://localhost:5000/die/${targetId}`, {\r\n            method: 'PUT'\r\n        }).then(() => {\r\n            fetch(`http://localhost:5000/die?page=${selectPage}`).then(response => response.json()).then(data => dispatch(addOrderList(data.rows)))\r\n        });\r\n    }, [dispatch, selectPage, targetId])\r\n\r\n    const statusElement = () => {\r\n        if (dieCenter !== true ) {\r\n            return <Td>{children.orderstatus === false ? <StyledRedSpan>Очікує</StyledRedSpan> : <StyleGreenSpan>Виконано</StyleGreenSpan>}</Td>;\r\n        }\r\n        if (children.orderstatus === false ) {\r\n            return <Td><Button variant=\"danger\" data-id={children.id} size=\"sm\" onClick={handleClick} block>Очікуєs</Button></Td>\r\n        } else {\r\n            return <Td>{children.orderstatus === false ? <StyledRedSpan>Очікує</StyledRedSpan> : <StyleGreenSpan>Виконано</StyleGreenSpan>}</Td>\r\n        }\r\n    }\r\n\r\n    const changeData = () => {\r\n        const date = new Date(children.ordertime);\r\n\r\n        let seconds = date.getSeconds();\r\n        if (String(seconds).length === 1 ) seconds = '0' + seconds;\r\n        let minutes = date.getMinutes();\r\n        if (String(minutes).length === 1 ) minutes = '0' + minutes;\r\n        let hours = date.getHours();\r\n        if (String(hours).length === 1 ) hours = '0' + hours;\r\n\r\n        let tDate = date.getDate();\r\n        if (String(tDate).length === 1 ) tDate = '0' + tDate;\r\n        let month = date.getMonth();\r\n        if (String(month).length === 1 ) month = '0' + month;\r\n        const years = date.getFullYear();\r\n        return <Td>{`${hours}:${minutes}:${seconds} - ${tDate}.${month}.${years}`}</Td>\r\n    }\r\n\r\n    return(\r\n        <tr>\r\n            <Td>{children.machine}</Td>\r\n            <Td>{children.app}</Td>\r\n            <Td>{children.material}</Td>\r\n            <Td>{children.mechanic === 'Mechan' ? 'До машини/верстата' : children.mechanic === 'DIE' ? 'Die - центру' : children.mechanic === null ? '' :\r\n                console.error(\r\n                    'Помилка на стадії відображеня, невірно зчитано/вказано найменування наладчика'\r\n                )}</Td>\r\n            {changeData()}\r\n            {statusElement()}\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default connect()(TdList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport addOrderList from './../../actions/addOrderList';\r\nimport Paginat from './paginat'\r\nimport TdList, { Th } from './ThTdList';\r\n\r\n\r\nconst OrderList = ({ ordersList, dispatch, dieCenter }) => {\r\n\r\n    const [selectPage, setSelectPage] = useState(1);\r\n    const [lastPage, setLastPage] = useState(0);\r\n    const [reloadStatus, setReloadStatus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/die?page=${selectPage}`).then(response => response.json()).then(data => {\r\n            dispatch(addOrderList(data.rows));\r\n            setLastPage(data.maxPage);\r\n        })\r\n    }, [dispatch, selectPage]);\r\n\r\n    useEffect(() => {\r\n        \r\n        if (selectPage === 1 && reloadStatus === false) {\r\n            const myInt = setInterval(() => {\r\n                fetch('http://localhost:5000/die?page=1').then(response => response.json()).then(data => dispatch(addOrderList(data.rows)));\r\n            }, 3000);\r\n            setReloadStatus(myInt);\r\n        }if (selectPage !== 1 && reloadStatus !== false) {\r\n            clearInterval(reloadStatus);\r\n            setReloadStatus(false);\r\n        }\r\n\r\n        return () => {\r\n            if (reloadStatus) {\r\n                clearInterval(reloadStatus)\r\n            }\r\n        }\r\n    }, [selectPage, reloadStatus, dispatch]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <section>\r\n                <Table responsive size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <Th>Машина</Th>\r\n                        <Th>Апплікатор</Th>\r\n                        <Th>Матеріал</Th>\r\n                        <Th>Механік</Th>\r\n                        <Th>Час заказу</Th>\r\n                        <Th>Статус</Th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(ordersList.length !== 0) && ordersList.map(element => <TdList key={element.id} selectPage={selectPage} dieCenter={dieCenter}>{element}</TdList>)}\r\n                    </tbody>\r\n                </Table>\r\n            </section>\r\n            <Paginat changePage={setSelectPage} currentNumber={selectPage} lastPage={lastPage}/>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        ordersList: store.ordersList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderList);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleFooter = styled.footer`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    background-color: #353535;\r\n    width: 100%;\r\n    height: 50px;\r\n    margin-top: 50px;\r\n    span {\r\n        color: #aaa;\r\n        font-family: 'Roboto';\r\n        font-size: 12px;\r\n        margin: 5px 25px;\r\n    }\r\n`;\r\n\r\nconst DieFooter = () => {\r\n    return(\r\n        <StyleFooter id=\"footer\">\r\n            <span>dieo v2 for \"ВО Карпати\"</span>\r\n        </StyleFooter>\r\n    );\r\n}\r\n\r\nexport default DieFooter;","import React from 'react';\r\nimport DieHeader from './../header';\r\nimport SubAddOrder from './subAddOrder';\r\nimport OrderList from './../global/orderList';\r\nimport DieFooter from './../footer';\r\n\r\n\r\nconst MainUser = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <DieHeader />\r\n            <SubAddOrder />\r\n            <OrderList dieCenter={false}/>\r\n            <DieFooter />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainUser;","import React from 'react';\r\nimport DieHeader from './../header';\r\nimport DieFooter from '../footer';\r\nimport OrderList from './../global/orderList';\r\n\r\nconst MainDie = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <DieHeader />\r\n            <OrderList dieCenter={true}/>\r\n            <DieFooter />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MainDie;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nconst ChangeMachineList = () => {\r\n    return(\r\n    <Form.Group controlId=\"changeMachineList\">\r\n        <h4>Заміни в списку машин</h4>\r\n        <Form.Control as=\"select\" custom>\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n        </Form.Control>\r\n        <Button variant=\"danger\" block>Удалити</Button>\r\n        <hr />\r\n        <Form.Control type=\"text\" placeholder=\"Номер машини\" />\r\n        <Button variant=\"success\" block>Добавити</Button>\r\n    </Form.Group>\r\n    );\r\n}\r\n\r\nexport default ChangeMachineList;","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport ChangeMachineList from './changeMachineList';\r\n\r\nconst SettingForm = () => {\r\n    return(\r\n        <Form>\r\n            <Form.Row>\r\n                <Col sm={2}>\r\n                    <ChangeMachineList />\r\n                </Col>\r\n            </Form.Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SettingForm;","import React from 'react';\r\nimport DieHeader from './../header';\r\nimport DieFooter from './../footer';\r\nimport SettingForm from './settingForm';\r\n\r\n\r\nconst MainSetting = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <DieHeader />\r\n            <SettingForm />\r\n            <DieFooter />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MainSetting;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CheckPassword = ({textButton, myPassword, myPage}) => {\r\n    const password = String(myPassword);\r\n    const [show, setShow] = useState(false);\r\n    const [inputData, setInputData] = useState('');\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleChange = (e) => {\r\n        setInputData(e.target.value);\r\n    }\r\n\r\n    const myButton = () => {\r\n        const value = String(inputData);\r\n        if (value === password) {\r\n            return(\r\n                <Link to={myPage}>\r\n                    <Button variant=\"primary\">\r\n                        Получити доступ\r\n                    </Button>\r\n                </Link>\r\n            );\r\n        } else {\r\n            return(\r\n                <Button variant=\"primary\" onClick={() => {\r\n                    setInputData('');\r\n                    handleClose();\r\n                }}>\r\n                    Получити доступ\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <Button variant=\"primary\" size=\"lg\" onClick={handleShow}>\r\n          {textButton}\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Перевірка пароля</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Введіть в полі пароль доступу</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Пароль\" value={inputData} onChange={handleChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                    Щоб перейти дальше вам потрібно вказати вірний пароль.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {myButton()}\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CheckPassword;","import React from 'react';\r\nimport { Button, Row, Container } from 'react-bootstrap';\r\nimport MainUser from './components/user/main';\r\nimport MainDie from './components/die/main';\r\nimport MainSetting from './components/setting/main'\r\nimport CheckPassword from './components/checkPassword';\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst ContainerWrapper = styled.div`\r\n  margin-top: 25px;\r\n  button {\r\n    margin: 10px;\r\n  }\r\n`;\r\n\r\nconst OpenDefault = () => {\r\n\r\n  return(\r\n    <ContainerWrapper>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Link to='/dieOrder'>\r\n            <Button variant='primary' size='lg'>\r\n              Оператор\r\n            </Button>\r\n          </Link>\r\n          <CheckPassword textButton='Дай центр' myPassword='1234' myPage='/dieCenter'/>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <CheckPassword textButton='Настройки' myPassword='4321' myPage='/dieSetting'/>\r\n        </Row>\r\n      </Container>\r\n      </ContainerWrapper>\r\n  );\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={OpenDefault} />\r\n        <Route path='/dieOrder' component={MainUser} />\r\n        <Route path='/dieCenter' component={MainDie} />\r\n        <Route path='/dieSetting' component={MainSetting} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_ORDERS_LIST } from './../reduxConstList';\r\n\r\nconst defaultOrdersList = [];\r\n\r\nconst ordersList = (state = defaultOrdersList, action) => {\r\n    switch(action.type) {\r\n        case ADD_ORDERS_LIST:\r\n            return action.ordersList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ordersList;","import { ADD_MACHINES_LIST } from './../reduxConstList';\r\n\r\nconst machinesListDefault = [];\r\n\r\nconst machinesList = (state = machinesListDefault, action) => {\r\n    switch(action.type) {\r\n        case ADD_MACHINES_LIST:\r\n            return action.machinesList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default machinesList;","import { ADD_MECHANIC_LIST } from './../reduxConstList';\r\n\r\nconst mechanicListDefault = [];\r\n\r\nconst mechanicList = (state = mechanicListDefault, action) => {\r\n    switch(action.type){\r\n        case ADD_MECHANIC_LIST:\r\n            return action.mechanicList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default mechanicList;","import { ADD_TOOL_LIST } from './../reduxConstList';\r\n\r\nconst defaultToolList = [];\r\n\r\nconst toolList = (state = defaultToolList, action) => {\r\n    switch(action.type){\r\n        case ADD_TOOL_LIST:\r\n            return action.toolList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toolList;","import { combineReducers } from 'redux';\r\nimport ordersList from './ordersList';\r\nimport machinesList from './machinesList';\r\nimport mechanicList from './mechanicList';\r\nimport toolList from './toolList';\r\n\r\nexport default combineReducers({\r\n    ordersList,\r\n    toolList,\r\n    machinesList,\r\n    mechanicList,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport orders from './reducers/combReducers';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore(orders, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}